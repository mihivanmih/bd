SHOW DATABASES;

CREATE DATABASE sql_course;

DROP DATABASE sql_course;

USE sql_course;

SHOW TABLES;

CREATE TABLE teacher(
    id INT AUTO_INCREMENT PRIMARY KEY,
    surname VARCHAR(255) NOT NULL
);

show columns FROM teacher;

CREATE TABLE lesson(
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    teacher_id INT NOT NULL,
    FOREIGN KEY (teacher_id) references teacher(id)
);

INSERT INTO teacher (surname) values ("Петров");

SELECT * FROM teacher;

SELECT id FROM teacher;

SELECT DISTINCT surname FROM teacher;

SELECT * FROM teacher WHERE id = 3;
SELECT * FROM teacher WHERE id < 3;

SELECT * FROM teacher WHERE surname = "Петров";

SELECT * FROM teacher LIMIT 2;

SELECT id AS 'idt' FROM teacher LIMIT 2;

SELECT * FROM teacher ORDER BY surname;
SELECT * FROM teacher ORDER BY surname DESC;

ALTER TABLE teacher ADD age INT;

UPDATE teacher SET age = 20 WHERE id = 1;

SELECT * FROM teacher WHERE surname like "%ов";

SELECT * FROM teacher WHERE id > 3 AND age < 45;
SELECT * FROM teacher WHERE id > 3 OR age < 25;
SELECT * FROM teacher WHERE NOT id = 2;
SELECT * FROM teacher WHERE age BETWEEN 35 and 45;

DELETE FROM teacher WHERE id = 5;

INSERT INTO lesson (name, teacher_id) values ("Математика", 1), ("Информатика", 1), ("Русский", 2), ("Физика", 3);

SELECT teacher.surname, lesson.name FROM teacher INNER JOIN lesson ON teacher.id = lesson.teacher_id;
SELECT teacher.surname, lesson.name FROM teacher LEFT OUTER JOIN lesson ON teacher.id = lesson.teacher_id;
SELECT teacher.surname, lesson.name FROM teacher RIGHT OUTER JOIN lesson ON teacher.id = lesson.teacher_id;

SELECT * FROM teacher UNION SELECT * FROM lesson;

SELECT AVG(age), MAX(age), MIN(age), SUM(age) FROM teacher;

INSERT INTO teacher (surname, age) values ("Пупкин", 25), ("Шишкин", 30);

SELECT age, COUNT(age) FROM teacher GROUP BY age;